{"version":3,"sources":["src/index-protoype.js"],"names":["Slider","slider","Element","Error","slides","querySelector","prevButton","nextButton","startSlider","applyClasses","move","bind","addEventListener","prototype","current","firstElementChild","prev","previousElementSibling","lastElementChild","next","nextElementSibling","console","log","classList","add","direction","classesToRemove","remove","mySlider","document","dogSlider"],"mappings":"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","file":"index-protoype.1a9f7492.js","sourceRoot":"..","sourcesContent":["function Slider(slider) {\n    //checking if passed in an actual html element\n    if (!(slider instanceof Element)) {\n        throw new Error('No slider passed in');    \n    }\n\n    //select elements needed for slider\n    this.slides = slider.querySelector('.slides');\n    this.slider = slider;\n    const prevButton = slider.querySelector('.goToPrev');\n    const nextButton = slider.querySelector('.goToNext');\n\n\n\n//when slider created, run functions below\nthis.startSlider();\nthis.applyClasses();\n\n//event listeners\nthis.move = this.move.bind(this);\nprevButton.addEventListener('click', () => this.move('back'));\nnextButton.addEventListener('click', () => this.move());\n \n\n}\n\n\nSlider.prototype.startSlider = function(){\n    this.current = this.slider.querySelector('.current') || this.slides.firstElementChild;\n    this.prev = this.current.previousElementSibling || this.slides.lastElementChild;\n    this.next = this.current.nextElementSibling || this.slides.firstElementChild;\n\n    console.log(this.current, this.prev, this.next);\n}\n\nSlider.prototype.applyClasses = function(){\n    this.current.classList.add('current');\n    this.prev.classList.add('prev');\n    this.next.classList.add('next');\n}\n\nSlider.prototype.move = function(direction){\n//strip all classes off current slides\n    const classesToRemove = ['prev', 'current', 'next'];\n\n    this.prev.classList.remove(...classesToRemove);\n    this.current.classList.remove(...classesToRemove);\n    this.next.classList.remove(...classesToRemove);\n\n    if(direction === 'back') {\n        /* make array of new values,\n        destructure them over and into prev, current and next variables*/\n        [this.prev, this.current, this.next] = [\n            /*get prev slide, if none then get last slide from entire slider to wrap */\n            this.prev.previousElementSibling || this.slides.lastElementChild, this.prev, this.current];\n\n    } else {\n        [this.prev, this.current, this.next] = [this.current, this.next, this.next.nextElementSibling || this.slides.firstElementChild]; //get next slide, if none then first lside from entire slider to wrap\n    }\n    this.applyClasses();\n}\n\nconst mySlider = new Slider(document.querySelector('.slider')\n);\n\nconst dogSlider = new Slider(document.querySelector('.dog-slider'));\n\nconsole.log(mySlider, dogSlider);"]}